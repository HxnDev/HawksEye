{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\HospitalAid\\\\Implementation\\\\Web App\\\\Website\\\\src\\\\components\\\\pages\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport loginimage from \"./images/login.png\";\nimport \"./Login.css\";\nimport fire from '../../../fire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  let navigate = useNavigate();\n\n  const routeChange = () => {\n    let path = '/Surveillance';\n    navigate(path);\n  };\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    fire.auth().signInWithEmailAndPassword(email, password).then(result => {\n      routeChange();\n    }).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-base\",\n    style: {\n      marginTop: 120\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loginimage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            placeholder: \"Email\",\n            autoFocus: true,\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            required: true,\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-btn\",\n      onClick: handleLogin,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"+cjpjggkFBHxN4Ul4OjYpKiUkws=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/FYP/HospitalAid/Implementation/Web App/Website/src/components/pages/Login/Login.js"],"names":["React","useState","useEffect","Link","useNavigate","loginimage","fire","Login","props","navigate","routeChange","path","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","clearInputs","clearErrors","handleLogin","auth","signInWithEmailAndPassword","then","result","catch","err","code","message","handleLogout","signOut","authListener","onAuthStateChanged","marginTop","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\"\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport loginimage from \"./images/login.png\"\r\nimport \"./Login.css\";\r\nimport fire from '../../../fire'\r\n\r\nconst Login= (props)=>{\r\n    let navigate = useNavigate();\r\n    \r\n    const routeChange = () =>{ \r\n        let path = '/Surveillance'; \r\n        navigate(path);\r\n      }\r\n\r\n      const [user, setUser] = useState('');\r\n      const [email, setEmail] = useState('');\r\n      const [password, setPassword] = useState('');\r\n      const [emailError, setEmailError] = useState('');\r\n      const [passwordError, setPasswordError] = useState('');\r\n  \r\n  const clearInputs = () => {\r\n      setEmail('');\r\n      setPassword('');\r\n  };\r\n  \r\n  const clearErrors = () => {\r\n      setEmailError('');\r\n      setPasswordError('');\r\n  };\r\n  \r\n  const handleLogin = () => {\r\n      clearErrors();\r\n      \r\n      fire\r\n          .auth()\r\n          .signInWithEmailAndPassword(email, password)\r\n          .then (result => {\r\n            routeChange();\r\n          })\r\n          .catch(err => {\r\n              switch (err.code) {\r\n                  case \"auth/invalid-email\":\r\n                  case \"auth/user-disabled\":\r\n                  case \"auth/user-not-found\":\r\n                      setEmailError(err.message);\r\n                      break;\r\n                  case \"auth/wrong-password\":\r\n                      setPasswordError(err.message);\r\n                      break;\r\n              }\r\n          }\r\n          );\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n      fire.auth().signOut();\r\n  };\r\n  \r\n  const authListener = () => {\r\n      fire.auth().onAuthStateChanged((user) => {\r\n          if (user) {\r\n              clearInputs();\r\n              setUser(user);\r\n          } else {\r\n              setUser(\"\");\r\n          }\r\n      });\r\n  };\r\n  \r\n  useEffect(() => {\r\n      authListener();\r\n  }, [])\r\n\r\n\r\n  return (\r\n        <div className=\"login-base\" style={{marginTop: 120}}>\r\n            <div className=\"login-content\">\r\n                <div className=\"login-image\">\r\n                    <img src={loginimage} />\r\n                </div>\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-form-group\">\r\n                        <label htmlFor=\"username\">Email Address</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"address\" \r\n                            placeholder=\"Email\" \r\n                            autoFocus \r\n                            required \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <p className=\"errorMsg\">{emailError}</p>\r\n\r\n                    </div>\r\n                    <div className=\"login-form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Password\"\r\n                            required\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}    \r\n                        />\r\n                        <p className=\"errorMsg\">{passwordError}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"login-btn\" onClick={handleLogin}>\r\n                    <h4>Login</h4>                   \r\n            </button>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}